name: CI/CD - Build, Push and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            juanpaz98/productly:latest
            juanpaz98/productly:${{ github.sha }}

  deploy-to-vps:
    name: Deploy to VPS via SSH
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.VPS_USER }}/productly

            # Traer últimos cambios del repo (Dockerfile, nginx.conf, docker-compose.yml, etc.)
            git pull origin main

            # Actualizar imágenes desde Docker Hub
            docker compose pull

            # Reconstruir solo si Dockerfile cambió (opcional)
            docker compose build --no-cache

            # Levantar servicios, forzando recreación de contenedores para reflejar cambios
            docker compose up -d --force-recreate

            # Aplicar migraciones automáticamente en el contenedor web
            docker compose exec -T web python manage.py migrate --noinput

            # Limpiar imágenes y contenedores huérfanos
            docker system prune -af
